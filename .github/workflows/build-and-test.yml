name: Compile & test

on:
  - workflow_dispatch

permissions:
  checks: write

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{matrix.name}}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            name: "Ubuntu latest with gcc"
            compiler: gcc
            target: Linux

          # - os: windows-latest
          #   name: "Windows latest with msvc"
          #   compiler: msvc
          #   target: Windows

          - os: macos-latest
            name: "MacOS latest with clang"
            compiler: clang
            target: MacOS

    steps: 
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install curl
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install libcurl4-openssl-dev

      - name: Install curl
        if: matrix.os == 'macos-latest'
        run: brew install curl-openssl

      - name: Install curl
        if: matrix.os == 'windows-latest'
        run: choco install curl

      - name: Get number of cores
        uses: SimenB/github-actions-cpu-cores@v2
        id: cpu-cores

      - name: Build the library
        shell: bash
        run: |
          mkdir build
          cmake -DGUI=OFF -DCMAKE_BUILD_TYPE=$BUILD_TYPE -S . -B build
          cmake --build build --target --config $BUILD_TYPE ausaxs -j ${{ steps.cpu-cores.outputs.cpu-cores }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: libs
          path: build/lib/*

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Build the tests
        run: cmake --build build --target tests -j $(nproc)

      - name: Run the tests
        run: ctest --output-on-failure --test-dir build/test

      - name: Generate test report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure()
        with:
          report_paths: build/test/reports/*.xml

