name: Test MacOS signing
on: workflow_dispatch

on:
  workflow_dispatch:

jobs:
  sign:
    runs-on: macos-latest
    steps:
      - uses: robinraju/release-downloader@v1
        with:
          fileName: 'macos-universal-binaries.zip'
          latest: true
          extract: true

      - name: Sign the artifact
        env: 
          CERTIFICATE_BASE64: ${{ secrets.MACOS_CERTIFICATE_BASE64 }}
          CERTIFICATE_PWD: ${{ secrets.MACOS_P12_PASSWORD }}
          KEYCHAIN_PWD: ${{ secrets.MACOS_KEYCHAIN_PASSWORD }}
          DEV_ID: ${{ secrets.MACOS_DEV_ID }}
        run: |
          # create vars
          CERTIFICATE_PATH=$RUNNER_TEMP/certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/keychain

          # decode the certificate
          echo -n $CERTIFICATE_BASE64 | base64 --decode -o $CERTIFICATE_PATH

          # create a keychain
          security create-keychain -p $KEYCHAIN_PWD $KEYCHAIN_PATH
          security default-keychain -s $KEYCHAIN_PATH
          security unlock-keychain -p $KEYCHAIN_PWD $KEYCHAIN_PATH

          # import certificate
          security import $CERTIFICATE_PATH -k $KEYCHAIN_PATH -P $CERTIFICATE_PWD -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k $KEYCHAIN_PWD $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # sign the artifact
          codesign --deep --force --verbose --options runtime --timestamp --sign "$DEV_ID" macos-universal-binaries/bin/saxs_fitter

          # verify signature
          codesign --verify --verbose macos-universal-binaries/bin/saxs_fitter
      
      - uses: lando/notarize-action@v2
        id: notarize
        with: 
          product-path: macos-universal-binaries/bin/saxs_fitter
          primary-bundle-id: "com.ausaxs.saxs_fitter"
          appstore-connect-username: ${{ secrets.MACOS_APP_USR }}
          appstore-connect-password: ${{ secrets.MACOS_APP_PWD }}
          appstore-connect-team-id: ${{ secrets.MACOS_APP_TEAM_ID }}
          verbose: true
      
      # - name: Staple the notarization ticket
      #   run: |
      #     # staple the notarization ticket
      #     xcrun stapler staple macos-universal-binaries/bin/saxs_fitter
      #     # verify the stapling
      #     codesign -dv --verbose=4 macos-universal-binaries/bin/saxs_fitter
      #     spctl -a -vv macos-universal-binaries/bin/saxs_fitter
      #     # check if stapling was successful
      #     if spctl -a -vv macos-universal-binaries/bin/saxs_fitter | grep -q "accepted"; then
      #       echo "Stapling was successful"
      #     else
      #       echo "Stapling failed"
      #       exit 1
      #     fi

      - uses: actions/upload-artifact@v4
        with:
          name: macos-signed-binaries
          path: macos-universal-binaries/bin/saxs_fitter
